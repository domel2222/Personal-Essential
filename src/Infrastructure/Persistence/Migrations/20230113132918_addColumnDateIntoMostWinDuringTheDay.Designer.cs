// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PersonalDbContext))]
    [Migration("20230113132918_addColumnDateIntoMostWinDuringTheDay")]
    partial class addColumnDateIntoMostWinDuringTheDay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiaryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("Domain.Entities.MostWinDuringTheDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StrenghtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WinDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.HasIndex("StrenghtId");

                    b.ToTable("MostWins");
                });

            modelBuilder.Entity("Domain.Entities.SelfAssessmentValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AffirmationResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("AssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AudiobookReadingResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("CaloriesResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DailyResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("DeepWorkResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("EnglishTimeResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LearningResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("StepsResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("TrainingResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("UsePhoneResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.HasIndex("UserId");

                    b.ToTable("SelfAssessmentValues");
                });

            modelBuilder.Entity("Domain.Entities.Strenght", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Strenghts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63046af5-b5cb-4a47-90b6-0e0077ebae62"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9500),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9533),
                            Name = "Responsibility"
                        },
                        new
                        {
                            Id = new Guid("8178eb3c-1370-4d56-92a4-3bafec7f8ff3"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9537),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9538),
                            Name = "Achiever"
                        },
                        new
                        {
                            Id = new Guid("b4dcb7c5-9b77-4ffb-89f8-39f814f5030b"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9541),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9542),
                            Name = "Focus"
                        },
                        new
                        {
                            Id = new Guid("f22b00b8-ca74-46b1-bff3-f3f87c148a5a"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9545),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9546),
                            Name = "Learner"
                        },
                        new
                        {
                            Id = new Guid("1feffb16-65b9-4b79-8439-e7ab4093370d"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9583),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9585),
                            Name = "Individualization"
                        },
                        new
                        {
                            Id = new Guid("4ed23dc9-1d6f-4be2-b80b-ff9993fccba5"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9588),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9589),
                            Name = "Self-Assurance"
                        },
                        new
                        {
                            Id = new Guid("2c2395a8-1991-4d23-bab4-6747566d59ce"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9601),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9603),
                            Name = "Activator"
                        },
                        new
                        {
                            Id = new Guid("e460205b-083e-4b2c-9e66-9bf6adc4680b"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9605),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9607),
                            Name = "Futuristic"
                        },
                        new
                        {
                            Id = new Guid("1c1abd48-244e-4308-aa50-5a58156791ee"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9609),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9611),
                            Name = "Connectedness"
                        },
                        new
                        {
                            Id = new Guid("878e3ceb-6b7e-4a7a-900d-336296fbe4bb"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9613),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9615),
                            Name = "Relator"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9882),
                            Email = "domel2222@gmail.com",
                            FirstName = "Dominik",
                            LastName = "Wikliński",
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2023, 1, 13, 14, 29, 18, 315, DateTimeKind.Local).AddTicks(9886)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Journals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.MostWinDuringTheDay", b =>
                {
                    b.HasOne("Domain.Entities.Journal", "Journal")
                        .WithMany("MostWinsDuringTheDay")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Strenght", "Strenght")
                        .WithMany("MostWinsDuringTheDay")
                        .HasForeignKey("StrenghtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journal");

                    b.Navigation("Strenght");
                });

            modelBuilder.Entity("Domain.Entities.SelfAssessmentValue", b =>
                {
                    b.HasOne("Domain.Entities.Journal", "Journal")
                        .WithMany("SelfAssessmentsValue")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("SelfAssessmentValues")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Journal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.Navigation("MostWinsDuringTheDay");

                    b.Navigation("SelfAssessmentsValue");
                });

            modelBuilder.Entity("Domain.Entities.Strenght", b =>
                {
                    b.Navigation("MostWinsDuringTheDay");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Journals");

                    b.Navigation("SelfAssessmentValues");
                });
#pragma warning restore 612, 618
        }
    }
}
