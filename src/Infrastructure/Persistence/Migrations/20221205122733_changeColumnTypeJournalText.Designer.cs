// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PersonalDbContext))]
    [Migration("20221205122733_changeColumnTypeJournalText")]
    partial class changeColumnTypeJournalText
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiaryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("Domain.Entities.MostWinDuringTheDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StrenghtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.HasIndex("StrenghtId");

                    b.ToTable("MostWins");
                });

            modelBuilder.Entity("Domain.Entities.SelfAssessmentValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AffirmationResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("AssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AudiobookReadingResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("CaloriesResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DailyResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("DeepWorkResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("EnglishTimeResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LearningResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("StepsResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("TrainingResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("UsePhoneResult")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.HasIndex("UserId");

                    b.ToTable("SelfAssessmentValues");
                });

            modelBuilder.Entity("Domain.Entities.Strenght", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Strenghts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac23b6c8-8368-4f14-a11b-f0bc24caf864"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8565),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8597),
                            Name = "Responsibility"
                        },
                        new
                        {
                            Id = new Guid("cf52fcfb-df40-44da-869f-bcac271194d5"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8601),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8603),
                            Name = "Achiever"
                        },
                        new
                        {
                            Id = new Guid("d33453c3-c880-4c5d-a4e9-bc3c6cc2c9a5"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8605),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8607),
                            Name = "Focus"
                        },
                        new
                        {
                            Id = new Guid("e4013a75-6d0c-40aa-bb38-b6fb69c95d20"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8609),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8611),
                            Name = "Learner"
                        },
                        new
                        {
                            Id = new Guid("3a19987b-2eda-4645-91b5-b285b9113972"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8613),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8614),
                            Name = "Individualization"
                        },
                        new
                        {
                            Id = new Guid("d571a099-78a6-4a3a-9128-c24d1df7745a"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8617),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8618),
                            Name = "Self-Assurance"
                        },
                        new
                        {
                            Id = new Guid("7c172324-0b15-4db8-b77f-c9ff75b72218"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8627),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8629),
                            Name = "Activator"
                        },
                        new
                        {
                            Id = new Guid("103a482e-6e62-49e1-b2c9-c251e3955ed2"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8631),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8633),
                            Name = "Futuristic"
                        },
                        new
                        {
                            Id = new Guid("2a308e97-5314-4104-a0c6-77c6d56121f1"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8635),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8636),
                            Name = "Connectedness"
                        },
                        new
                        {
                            Id = new Guid("6c9eb440-49de-4db5-9b4e-fa21f261d20e"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8639),
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8640),
                            Name = "Relator"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("InactivatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            CreatedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8869),
                            Email = "domel2222@gmail.com",
                            FirstName = "Dominik",
                            LastName = "Wikliński",
                            ModifiedBy = new Guid("af855ff4-c3e3-4a5e-a5a8-6874bd2f7a31"),
                            ModifiedDate = new DateTime(2022, 12, 5, 13, 27, 33, 24, DateTimeKind.Local).AddTicks(8873)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Journals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.MostWinDuringTheDay", b =>
                {
                    b.HasOne("Domain.Entities.Journal", "Journal")
                        .WithMany("MostWinsDuringTheDay")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Strenght", "Strenght")
                        .WithMany("MostWinsDuringTheDay")
                        .HasForeignKey("StrenghtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journal");

                    b.Navigation("Strenght");
                });

            modelBuilder.Entity("Domain.Entities.SelfAssessmentValue", b =>
                {
                    b.HasOne("Domain.Entities.Journal", "Journal")
                        .WithMany("SelfAssessmentsValue")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("SelfAssessmentValues")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Journal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Journal", b =>
                {
                    b.Navigation("MostWinsDuringTheDay");

                    b.Navigation("SelfAssessmentsValue");
                });

            modelBuilder.Entity("Domain.Entities.Strenght", b =>
                {
                    b.Navigation("MostWinsDuringTheDay");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Journals");

                    b.Navigation("SelfAssessmentValues");
                });
#pragma warning restore 612, 618
        }
    }
}
